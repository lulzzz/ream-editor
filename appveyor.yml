version: 0.1.0.{build}
os: unstable # https://github.com/electron/spectron#on-appveyor
platform: 
  - x64
branches:
  only:
    - master
services:
  - mssql2014

environment:
  CLI_VERSION: latest
  CLI_ARCH: x64
  OMNISHARP_URL: https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.9-beta19/omnisharp-win-x64-netcoreapp1.0.zip
  OMNISHARP_ZIP: omnisharp-win-x64-netcoreapp1.0.zip
  DOTNETCLI_ZIP_URL: https://go.microsoft.com/fwlink/?LinkID=831469
  PACKAGE_BASE: build
  ELECTRON_OUT: ream-editor-win32-x64

cache:
  - 'node_modules -> package.json' # local npm modules
  - '%APPDATA%\npm-cache -> package.json' # npm cache
  - '%USERPROFILE%\.nuget\packages -> project.json' # project.json cache
  - '%USERPROFILE%\.electron -> package.json' # project.json cache
  - '%OMNISHARP_ZIP%'

install:
  - git submodule update --init --recursive
  - ps: $env:APP_FINAL="$env:ELECTRON_OUT-$env:APPVEYOR_BUILD_VERSION.zip"
  # upgrades to latest node
  - ps: Install-Product node '6.9.1'
  - ps: $env:DOTNET_INSTALL_DIR = "$pwd\.dotnetcli"
  - ps: $env:DOTNET_ZIP_FILE = "$pwd\dotnet.zip"
  - ps: (New-Object Net.WebClient).DownloadFile("$env:DOTNETCLI_ZIP_URL", "$env:DOTNET_ZIP_FILE")
  - 7z x %DOTNET_ZIP_FILE% -y -o"%DOTNET_INSTALL_DIR%"
  - ps: $env:Path = "$env:DOTNET_INSTALL_DIR;$env:Path"
  - ps: 'If (-Not(Test-Path $env:OMNISHARP_ZIP)) { Invoke-WebRequest "$env:OMNISHARP_URL" -OutFile "$env:OMNISHARP_ZIP" }'

before_build:
  # generates the scripts in the working folder
  - ps: $sqlInstance = "(local)\SQL2014"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "use master; create database world;"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "use master; create database typetest;"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -i $env:APPVEYOR_BUILD_FOLDER\query\sql\world_sqlserver.sql
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -i $env:APPVEYOR_BUILD_FOLDER\query\sql\typetest_sqlserver.sql
  - dotnet --info
  # npm test runs assumes that there's a "local" omnisharp 
  - 7z x %OMNISHARP_ZIP% -y -o"omnisharp"
  - npm run gulp-build
          
build_script:
  - npm test
  - .\scripts\build.cmd

after_test:
  - 7z a "%APP_FINAL%" "%ELECTRON_OUT%"

artifacts:
  - path: $(APP_FINAL)
