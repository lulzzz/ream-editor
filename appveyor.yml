# version = build id
version: 0.1.0.{build}
test: off # this turns of AppVeyor automatic searching for test-assemblies
build: off # no msbuild build
os: Windows Server 2012

cache:
  - shell\node_modules # local npm modules
  - '%APPDATA%\npm-cache -> shell\package.json' # npm cache
  - '%USERPROFILE%\.nuget\packages -> query-engine\project.json' # project.json cache

environment:
  CLI_VERSION: latest
  CLI_ARCH: x64
  OUTPATH: ../build

# see https://github.com/enricosada/fsharp-dotnet-cli-samples/blob/master/appveyor.yml
install:
  # Download install script to install .NET cli in .dotnet dir
  - ps: mkdir -Force ".\scripts\obtain\" | Out-Null
  - ps: Invoke-WebRequest "https://raw.githubusercontent.com/dotnet/cli/rel/1.0.0/scripts/obtain/install.ps1" -OutFile ".\scripts\obtain\install.ps1"
  - ps: $env:DOTNET_INSTALL_DIR = "$pwd\.dotnetcli"
  - ps: '& .\scripts\obtain\install.ps1 -Channel "future" -version "$env:CLI_VERSION" -Architecture "$env:CLI_ARCH" -InstallDir "$env:DOTNET_INSTALL_DIR" -NoPath'
  # add dotnet to PATH
  - ps: $env:Path = "$env:DOTNET_INSTALL_DIR;$env:Path"

build_script:
    - ps: push-location "query-engine"
    - ps: dotnet restore
    - ps: dotnet publish
    - ps: pop-location
    - ps: push-location "shell"
    - ps: Install-Product node ''
    - npm install
    - npm install -g tsdm
    - tsdm rewire
    - npm run ts-once -v
    - npm run ts-once
    - node build.js
    - npm run package
    - ps: pop-location
