version: 0.1.0.{build}
services:
  - mssql2014
  
environment:
  CLI_VERSION: latest
  CLI_ARCH: x64
  OMNISHARP_URL: https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.9-beta5/omnisharp-win-x64-netcoreapp1.0.zip
  OMNISHARP_ZIP: v1.9-beta5-omnisharp-win-x64-netcoreapp1.zip
  DOTNETCLI_URL: https://raw.githubusercontent.com/dotnet/cli/v1.0.0-preview1/scripts/obtain/install.ps1
  PACKAGE_BASE: build
  ELECTRON_OUT: linq-editor-win32-x64
  NODE_ENV: PRODUCTION

cache:
  - 'node_modules -> package.json' # local npm modules
  - '%APPDATA%\npm-cache -> package.json' # npm cache
  - '%USERPROFILE%\.nuget\packages -> project.json' # project.json cache
  - '%USERPROFILE%\.electron -> package.json' # project.json cache
  - '%OMNISHARP_ZIP%'

install:
  - ps: $env:APP_FINAL="$env:ELECTRON_OUT-$env:APPVEYOR_BUILD_VERSION.zip"
  # upgrades to latest node
  - ps: Install-Product node ''
  # see https://github.com/enricosada/fsharp-dotnet-cli-samples/blob/master/appveyor.yml
  # Download install script to install .NET cli in .dotnet dir
  - ps: mkdir -Force ".\scripts\obtain\" | Out-Null
  - ps: Invoke-WebRequest "$env:DOTNETCLI_URL" -OutFile ".\scripts\obtain\install.ps1"
  - ps: $env:DOTNET_INSTALL_DIR = "$pwd\.dotnetcli"
  - ps: '& .\scripts\obtain\install.ps1 -Channel "preview" -version "$env:CLI_VERSION" -Architecture "$env:CLI_ARCH" -InstallDir "$env:DOTNET_INSTALL_DIR" -NoPath'
  - ps: $env:Path = "$env:DOTNET_INSTALL_DIR;$env:Path"
  - ps: 'If (-Not(Test-Path $env:OMNISHARP_ZIP)) { Invoke-WebRequest "$env:OMNISHARP_URL" -OutFile "$env:OMNISHARP_ZIP" }'

before_build:
  # generates the scripts in the working folder
  - npm run generate-for-sqlserver
  - ps: $sqlInstance = "(local)\SQL2014"
  - ps: $db_script = [IO.File]::ReadAllText("$env:APPVEYOR_BUILD_FOLDER\sql-script-testdb.sql")
  - ps: $db2_script = [IO.File]::ReadAllText("$env:APPVEYOR_BUILD_FOLDER\sql-script-testdb2.sql")
  - ps: $db_script
  - ps: $db2_script
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "use master; create database testdb;"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "use master; create database testdb2;"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "$db_script"
  - ps: sqlcmd -S "$sqlInstance" -U "sa" -P "Password12!" -Q "$db2_script"
  - dotnet --info
          
build_script:
  - build_script.cmd

test_script:
  - npm run int-test

after_test:
  - 7z a "%APP_FINAL%" "%ELECTRON_OUT%"

artifacts:
  - path: $(APP_FINAL)
  - path: $(ELECTRON_OUT)\linq-editor.log
